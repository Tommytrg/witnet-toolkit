const helpers = require("../helpers")
const qrcode = require('qrcode-terminal');
const toolkit = require("../../../dist");

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// CLI SUBMODULE CONSTANTS ===========================================================================================

module.exports = {
    flags: {
        fee: {
            hint: "Qualify how much fee to pay: stinky|low|medium|high|opulent (default: medium)",
            param: ":fee_tag",
        },
        path: {
            hint: "Derive spending address from BIP-32 path",
            param: "m/:path"
        },
        provider: {
            hint: "Public Wit/Oracle JSON-RPC provider, other than default",
            param: ":http-url",
        },
    },
    router: {
        address: {
            hint: "Show wallet's public key hash address."
        },
        balance: {
            hint: "Show wallet's available balance.",
        },
        providers: {
            hint: "Show the underlying Wit/Oracle RPC provider(s) being used."
        },
        stake: {
            hint: "Stake specified amount of Wits by using given authorization code.",
            params: "NANOWITS",
            options: { 
                authorization: { 
                    hint: "Stake authorization code as generated by a validator", 
                    param: ":hexstring"
                },
                withdrawer: {
                    hint: "(Optional) Address allowed to withdraw the stake",
                    param: ":pkh"
                },
            }
        },
        unstake: {
            hint: "Unstake specified amount of Wits from given validator",
            params: "NANOWITS",
            options: {
                validator: {
                    hint: "Validator address from where to withdraw the stake",
                    param: ":pkh"
                },
            }
        },
        transfer: {
            hint: "Transfer specified amount of Wits to given address.",
            params: "NANOWITS",
            options: {
                to: {
                    hint: "Destination address",
                    param: ":pkh",
                },
            },
        },
        utxos: {
            hint: "List wallet's available UTXOs.",
        },
        splitUtxos: {
            hint: "Lorem ipsum.",
        },
        joinUtxos: {
            hint: "Lorem ipsum.",
        },
    },
    subcommands: {
        address, providers,
    },
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// CLI SUBMODULE COMMANDS ============================================================================================

function address(flags) {
    // TODO
    if (!flags) flags = {}
    const provider = new toolkit.Provider(flags?.provider)
    const wallet = new toolkit.Wallet(process.env.WITNET_TOOLKIT_MASTER_KEY || "masterkey", provider)
    console.info(helpers.colors.lgreen("twit1f0am8c97q2ygkz3q6jyd2x29s8zaxqlxcqltxx"))
    qrcode.generate("twit1f0am8c97q2ygkz3q6jyd2x29s8zaxqlxcqltxx")
}

function providers(flags) {
    const provider = new toolkit.Provider(flags?.provider)
    const wallet = new toolkit.Wallet(process.env.WITNET_TOOLKIT_MASTER_KEY || "masterkey", provider)
    wallet.provider.endpoints.forEach(url => {
        console.info(helpers.colors.yellow(url))
    })
}
